/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package sudoku;

import java.awt.Color;
import java.awt.Font;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

/**
 *
 * @author bachle
 */
public class sudokuWindow extends javax.swing.JFrame {

    private boolean[][] userInput;
    private static JLabel cellSelected;
    private JLabel[][] cells;
    private static logic logic;
    private static check check;
    private static musicPlayer musicPlayer;

    /**
     * Creates new form sudokuWindow
     */
    public sudokuWindow() {

        musicPlayer = new musicPlayer();
        check = new check();
        logic = new logic();

        initComponents();

        userInput = new boolean[9][9];
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                userInput[i][j] = true;
            }
        }

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                int ii = i;
                int jj = j;

                //Adds mouse listeners and cellMouseClicked method to all 81 cells
                cells[i][j].addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        cellMouseClicked(evt, ii, jj);
                    }
                });

                //Adds mouse wheel listeners and cellMouseWheelMoved method to all 81 cells
                cells[i][j].addMouseWheelListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                        cellMouseWheelMoved(evt, ii, jj);
                    }
                });
            }
        }

        enableButtons(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sodukuBoard = new javax.swing.JPanel();
        cells = new JLabel[9][9];
        region0_0 = new javax.swing.JPanel();
        cell0_0 = new javax.swing.JLabel();
        cells[0][0] = cell0_0;
        cell0_1 = new javax.swing.JLabel();
        cells[0][1] = cell0_1;
        cell0_2 = new javax.swing.JLabel();
        cells[0][2] = cell0_2;
        cell1_0 = new javax.swing.JLabel();
        cells[1][0] = cell1_0;
        cell1_1 = new javax.swing.JLabel();
        cells[1][1] = cell1_1;
        cell1_2 = new javax.swing.JLabel();
        cells[1][2] = cell1_2;
        cell2_0 = new javax.swing.JLabel();
        cells[2][0] = cell2_0;
        cell2_1 = new javax.swing.JLabel();
        cells[2][1] = cell2_1;
        cell2_2 = new javax.swing.JLabel();
        cells[2][2] = cell2_2;
        region0_1 = new javax.swing.JPanel();
        cell0_3 = new javax.swing.JLabel();
        cells[0][3] = cell0_3;
        cell0_4 = new javax.swing.JLabel();
        cells[0][4] = cell0_4;
        cell0_5 = new javax.swing.JLabel();
        cells[0][5] = cell0_5;
        cell1_3 = new javax.swing.JLabel();
        cells[1][3] = cell1_3;
        cell1_4 = new javax.swing.JLabel();
        cells[1][4] = cell1_4;
        cell1_5 = new javax.swing.JLabel();
        cells[1][5] = cell1_5;
        cell2_3 = new javax.swing.JLabel();
        cells[2][3] = cell2_3;
        cell2_4 = new javax.swing.JLabel();
        cells[2][4] = cell2_4;
        cell2_5 = new javax.swing.JLabel();
        cells[2][5] = cell2_5;
        region0_2 = new javax.swing.JPanel();
        cell0_6 = new javax.swing.JLabel();
        cells[0][6] = cell0_6;
        cell0_7 = new javax.swing.JLabel();
        cells[0][7] = cell0_7;
        cell0_8 = new javax.swing.JLabel();
        cells[0][8] = cell0_8;
        cell1_6 = new javax.swing.JLabel();
        cells[1][6] = cell1_6;
        cell1_7 = new javax.swing.JLabel();
        cells[1][7] = cell1_7;
        cell1_8 = new javax.swing.JLabel();
        cells[1][8] = cell1_8;
        cell2_6 = new javax.swing.JLabel();
        cells[2][6] = cell2_6;
        cell2_7 = new javax.swing.JLabel();
        cells[2][7] = cell2_7;
        cell2_8 = new javax.swing.JLabel();
        cells[2][8] = cell2_8;
        region1_0 = new javax.swing.JPanel();
        cell3_0 = new javax.swing.JLabel();
        cells[3][0] = cell3_0;
        cell3_1 = new javax.swing.JLabel();
        cells[3][1] = cell3_1;
        cell3_2 = new javax.swing.JLabel();
        cells[3][2] = cell3_2;
        cell4_0 = new javax.swing.JLabel();
        cells[4][0] = cell4_0;
        cell4_1 = new javax.swing.JLabel();
        cells[4][1] = cell4_1;
        cell4_2 = new javax.swing.JLabel();
        cells[4][2] = cell4_2;
        cell5_0 = new javax.swing.JLabel();
        cells[5][0] = cell5_0;
        cell5_1 = new javax.swing.JLabel();
        cells[5][1] = cell5_1;
        cell5_2 = new javax.swing.JLabel();
        cells[5][2] = cell5_2;
        region1_1 = new javax.swing.JPanel();
        cell3_3 = new javax.swing.JLabel();
        cells[3][3] = cell3_3;
        cell3_4 = new javax.swing.JLabel();
        cells[3][4] = cell3_4;
        cell3_5 = new javax.swing.JLabel();
        cells[3][5] = cell3_5;
        cell4_3 = new javax.swing.JLabel();
        cells[4][3] = cell4_3;
        cell4_4 = new javax.swing.JLabel();
        cells[4][4] = cell4_4;
        cell4_5 = new javax.swing.JLabel();
        cells[4][5] = cell4_5;
        cell5_3 = new javax.swing.JLabel();
        cells[5][3] = cell5_3;
        cell5_4 = new javax.swing.JLabel();
        cells[5][4] = cell5_4;
        cell5_5 = new javax.swing.JLabel();
        cells[5][5] = cell5_5;
        region1_2 = new javax.swing.JPanel();
        cell3_6 = new javax.swing.JLabel();
        cells[3][6] = cell3_6;
        cell3_7 = new javax.swing.JLabel();
        cells[3][7] = cell3_7;
        cell3_8 = new javax.swing.JLabel();
        cells[3][8] = cell3_8;
        cell4_6 = new javax.swing.JLabel();
        cells[4][6] = cell4_6;
        cell4_7 = new javax.swing.JLabel();
        cells[4][7] = cell4_7;
        cell4_8 = new javax.swing.JLabel();
        cells[4][8] = cell4_8;
        cell5_6 = new javax.swing.JLabel();
        cells[5][6] = cell5_6;
        cell5_7 = new javax.swing.JLabel();
        cells[5][7] = cell5_7;
        cell5_8 = new javax.swing.JLabel();
        cells[5][8] = cell5_8;
        region2_0 = new javax.swing.JPanel();
        cell6_0 = new javax.swing.JLabel();
        cells[6][0] = cell6_0;
        cell6_1 = new javax.swing.JLabel();
        cells[6][1] = cell6_1;
        cell6_2 = new javax.swing.JLabel();
        cells[6][2] = cell6_2;
        cell7_0 = new javax.swing.JLabel();
        cells[7][0] = cell7_0;
        cell7_1 = new javax.swing.JLabel();
        cells[7][1] = cell7_1;
        cell7_2 = new javax.swing.JLabel();
        cells[7][2] = cell7_2;
        cell8_0 = new javax.swing.JLabel();
        cells[8][0] = cell8_0;
        cell8_1 = new javax.swing.JLabel();
        cells[8][1] = cell8_1;
        cell8_2 = new javax.swing.JLabel();
        cells[8][2] = cell8_2;
        region2_1 = new javax.swing.JPanel();
        cell6_3 = new javax.swing.JLabel();
        cells[6][3] = cell6_3;
        cell6_4 = new javax.swing.JLabel();
        cells[6][4] = cell6_4;
        cell6_5 = new javax.swing.JLabel();
        cells[6][5] = cell6_5;
        cell7_3 = new javax.swing.JLabel();
        cells[7][3] = cell7_3;
        cell7_4 = new javax.swing.JLabel();
        cells[7][4] = cell7_4;
        cell7_5 = new javax.swing.JLabel();
        cells[7][5] = cell7_5;
        cell8_3 = new javax.swing.JLabel();
        cells[8][3] = cell8_3;
        cell8_4 = new javax.swing.JLabel();
        cells[8][4] = cell8_4;
        cell8_5 = new javax.swing.JLabel();
        cells[8][5] = cell8_5;
        region2_2 = new javax.swing.JPanel();
        cell6_6 = new javax.swing.JLabel();
        cells[6][6] = cell6_6;
        cell6_7 = new javax.swing.JLabel();
        cells[6][7] = cell6_7;
        cell6_8 = new javax.swing.JLabel();
        cells[6][8] = cell6_8;
        cell7_6 = new javax.swing.JLabel();
        cells[7][6] = cell7_6;
        cell7_7 = new javax.swing.JLabel();
        cells[7][7] = cell7_7;
        cell7_8 = new javax.swing.JLabel();
        cells[7][8] = cell7_8;
        cell8_6 = new javax.swing.JLabel();
        cells[8][6] = cell8_6;
        cell8_7 = new javax.swing.JLabel();
        cells[8][7] = cell8_7;
        cell8_8 = new javax.swing.JLabel();
        cells[8][8] = cell8_8;
        restartButton = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        hintButton = new javax.swing.JButton();
        checkButton = new javax.swing.JButton();
        boardSettings = new javax.swing.JLabel();
        solveButton = new javax.swing.JButton();
        solveSettings = new javax.swing.JLabel();
        musicPlayerJPanel = new javax.swing.JPanel();
        musicComboBox = new javax.swing.JComboBox<>();
        String[] musicNames = sudoku.readFiles.getFiles("music");
        musicComboBox.addItem("None");
        for(int i = 0; i < musicNames.length; i++)
        {
            musicComboBox.addItem(musicNames[i]);
        }
        pauseAndPlayButton = new javax.swing.JButton();
        currentlyPlayingJLabel = new javax.swing.JLabel();
        loopCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        boardSetText = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        puzzlesComboBox = new javax.swing.JComboBox<>();
        String[] puzzleNames = sudoku.readFiles.getFiles("puzzles");
        puzzlesComboBox.addItem("None");
        for(int i = 0; i < puzzleNames.length; i++)
        {
            puzzlesComboBox.addItem(puzzleNames[i]);
        }

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sudoku");
        setResizable(false);

        sodukuBoard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        region0_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell0_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_0.setText(" ");
        cell0_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_0.setOpaque(true);
        cell0_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell0_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_1.setText(" ");
        cell0_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_1.setOpaque(true);
        cell0_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell0_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_2.setText(" ");
        cell0_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_2.setOpaque(true);
        cell0_2.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_0.setText(" ");
        cell1_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_0.setOpaque(true);
        cell1_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_1.setText(" ");
        cell1_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_1.setOpaque(true);
        cell1_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_2.setText(" ");
        cell1_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_2.setOpaque(true);
        cell1_2.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_0.setText(" ");
        cell2_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_0.setOpaque(true);
        cell2_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_1.setText(" ");
        cell2_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_1.setOpaque(true);
        cell2_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_2.setText(" ");
        cell2_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_2.setOpaque(true);
        cell2_2.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region0_0Layout = new javax.swing.GroupLayout(region0_0);
        region0_0.setLayout(region0_0Layout);
        region0_0Layout.setHorizontalGroup(
            region0_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region0_0Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region0_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region0_0Layout.createSequentialGroup()
                        .addComponent(cell1_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell1_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell1_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region0_0Layout.createSequentialGroup()
                        .addComponent(cell0_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell0_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell0_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region0_0Layout.createSequentialGroup()
                        .addComponent(cell2_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell2_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell2_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        region0_0Layout.setVerticalGroup(
            region0_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region0_0Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region0_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell0_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell0_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell0_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region0_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell1_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell1_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell1_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region0_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell2_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell2_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell2_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        region0_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell0_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_3.setText(" ");
        cell0_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_3.setOpaque(true);
        cell0_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell0_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_4.setText(" ");
        cell0_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_4.setOpaque(true);
        cell0_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell0_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_5.setText(" ");
        cell0_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_5.setOpaque(true);
        cell0_5.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_3.setText(" ");
        cell1_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_3.setOpaque(true);
        cell1_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_4.setText(" ");
        cell1_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_4.setOpaque(true);
        cell1_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_5.setText(" ");
        cell1_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_5.setOpaque(true);
        cell1_5.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_3.setText(" ");
        cell2_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_3.setOpaque(true);
        cell2_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_4.setText(" ");
        cell2_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_4.setOpaque(true);
        cell2_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_5.setText(" ");
        cell2_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_5.setOpaque(true);
        cell2_5.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region0_1Layout = new javax.swing.GroupLayout(region0_1);
        region0_1.setLayout(region0_1Layout);
        region0_1Layout.setHorizontalGroup(
            region0_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region0_1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region0_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region0_1Layout.createSequentialGroup()
                        .addComponent(cell1_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell1_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell1_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region0_1Layout.createSequentialGroup()
                        .addComponent(cell0_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell0_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell0_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region0_1Layout.createSequentialGroup()
                        .addComponent(cell2_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell2_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell2_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        region0_1Layout.setVerticalGroup(
            region0_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region0_1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region0_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell0_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell0_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell0_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region0_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell1_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell1_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell1_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region0_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell2_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell2_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell2_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        region0_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell0_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_6.setText(" ");
        cell0_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_6.setOpaque(true);
        cell0_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell0_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_7.setText(" ");
        cell0_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_7.setOpaque(true);
        cell0_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell0_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell0_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell0_8.setText(" ");
        cell0_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell0_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell0_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell0_8.setOpaque(true);
        cell0_8.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_6.setText(" ");
        cell1_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_6.setOpaque(true);
        cell1_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_7.setText(" ");
        cell1_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_7.setOpaque(true);
        cell1_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell1_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell1_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell1_8.setText(" ");
        cell1_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell1_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell1_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell1_8.setOpaque(true);
        cell1_8.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_6.setText(" ");
        cell2_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_6.setOpaque(true);
        cell2_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_7.setText(" ");
        cell2_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_7.setOpaque(true);
        cell2_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell2_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell2_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell2_8.setText(" ");
        cell2_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell2_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell2_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell2_8.setOpaque(true);
        cell2_8.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region0_2Layout = new javax.swing.GroupLayout(region0_2);
        region0_2.setLayout(region0_2Layout);
        region0_2Layout.setHorizontalGroup(
            region0_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region0_2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region0_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region0_2Layout.createSequentialGroup()
                        .addComponent(cell1_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell1_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell1_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region0_2Layout.createSequentialGroup()
                        .addComponent(cell0_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell0_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell0_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region0_2Layout.createSequentialGroup()
                        .addComponent(cell2_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell2_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell2_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        region0_2Layout.setVerticalGroup(
            region0_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region0_2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region0_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell0_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell0_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell0_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region0_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell1_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell1_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell1_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region0_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell2_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell2_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell2_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        region1_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell3_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_0.setText(" ");
        cell3_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_0.setOpaque(true);
        cell3_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell3_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_1.setText(" ");
        cell3_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_1.setOpaque(true);
        cell3_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell3_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_2.setText(" ");
        cell3_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_2.setOpaque(true);
        cell3_2.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_0.setText(" ");
        cell4_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_0.setOpaque(true);
        cell4_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_1.setText(" ");
        cell4_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_1.setOpaque(true);
        cell4_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_2.setText(" ");
        cell4_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_2.setOpaque(true);
        cell4_2.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_0.setText(" ");
        cell5_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_0.setOpaque(true);
        cell5_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_1.setText(" ");
        cell5_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_1.setOpaque(true);
        cell5_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_2.setText(" ");
        cell5_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_2.setOpaque(true);
        cell5_2.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region1_0Layout = new javax.swing.GroupLayout(region1_0);
        region1_0.setLayout(region1_0Layout);
        region1_0Layout.setHorizontalGroup(
            region1_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region1_0Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(region1_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region1_0Layout.createSequentialGroup()
                        .addComponent(cell4_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell4_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell4_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region1_0Layout.createSequentialGroup()
                        .addComponent(cell3_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell3_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell3_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region1_0Layout.createSequentialGroup()
                        .addComponent(cell5_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell5_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell5_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        region1_0Layout.setVerticalGroup(
            region1_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region1_0Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(region1_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell3_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell3_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell3_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region1_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell4_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell4_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell4_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region1_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell5_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell5_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell5_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        region1_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell3_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_3.setText(" ");
        cell3_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_3.setOpaque(true);
        cell3_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell3_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_4.setText(" ");
        cell3_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_4.setOpaque(true);
        cell3_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell3_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_5.setText(" ");
        cell3_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_5.setOpaque(true);
        cell3_5.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_3.setText(" ");
        cell4_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_3.setOpaque(true);
        cell4_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_4.setText(" ");
        cell4_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_4.setOpaque(true);
        cell4_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_5.setText(" ");
        cell4_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_5.setOpaque(true);
        cell4_5.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_3.setText(" ");
        cell5_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_3.setOpaque(true);
        cell5_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_4.setText(" ");
        cell5_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_4.setOpaque(true);
        cell5_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_5.setText(" ");
        cell5_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_5.setOpaque(true);
        cell5_5.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region1_1Layout = new javax.swing.GroupLayout(region1_1);
        region1_1.setLayout(region1_1Layout);
        region1_1Layout.setHorizontalGroup(
            region1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region1_1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region1_1Layout.createSequentialGroup()
                        .addComponent(cell4_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell4_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell4_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region1_1Layout.createSequentialGroup()
                        .addComponent(cell3_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell3_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell3_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region1_1Layout.createSequentialGroup()
                        .addComponent(cell5_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell5_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell5_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        region1_1Layout.setVerticalGroup(
            region1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region1_1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell3_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell3_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell3_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell4_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell4_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell4_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region1_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell5_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell5_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell5_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        region1_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell3_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_6.setText(" ");
        cell3_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_6.setOpaque(true);
        cell3_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell3_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_7.setText(" ");
        cell3_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_7.setOpaque(true);
        cell3_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell3_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell3_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell3_8.setText(" ");
        cell3_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell3_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell3_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell3_8.setOpaque(true);
        cell3_8.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_6.setText(" ");
        cell4_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_6.setOpaque(true);
        cell4_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_7.setText(" ");
        cell4_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_7.setOpaque(true);
        cell4_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell4_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell4_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell4_8.setText(" ");
        cell4_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell4_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell4_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell4_8.setOpaque(true);
        cell4_8.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_6.setText(" ");
        cell5_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_6.setOpaque(true);
        cell5_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_7.setText(" ");
        cell5_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_7.setOpaque(true);
        cell5_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell5_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell5_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell5_8.setText(" ");
        cell5_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell5_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell5_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell5_8.setOpaque(true);
        cell5_8.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region1_2Layout = new javax.swing.GroupLayout(region1_2);
        region1_2.setLayout(region1_2Layout);
        region1_2Layout.setHorizontalGroup(
            region1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region1_2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region1_2Layout.createSequentialGroup()
                        .addComponent(cell4_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell4_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell4_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region1_2Layout.createSequentialGroup()
                        .addComponent(cell3_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell3_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell3_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region1_2Layout.createSequentialGroup()
                        .addComponent(cell5_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell5_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell5_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        region1_2Layout.setVerticalGroup(
            region1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region1_2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell3_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell3_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell3_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell4_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell4_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell4_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region1_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell5_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell5_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell5_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        region2_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell6_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_0.setText(" ");
        cell6_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_0.setOpaque(true);
        cell6_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell6_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_1.setText(" ");
        cell6_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_1.setOpaque(true);
        cell6_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell6_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_2.setText(" ");
        cell6_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_2.setOpaque(true);
        cell6_2.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_0.setText(" ");
        cell7_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_0.setOpaque(true);
        cell7_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_1.setOpaque(true);
        cell7_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_2.setText(" ");
        cell7_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_2.setOpaque(true);
        cell7_2.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_0.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_0.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_0.setText(" ");
        cell8_0.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_0.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_0.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_0.setOpaque(true);
        cell8_0.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_1.setText(" ");
        cell8_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_1.setOpaque(true);
        cell8_1.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_2.setText(" ");
        cell8_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_2.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_2.setOpaque(true);
        cell8_2.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region2_0Layout = new javax.swing.GroupLayout(region2_0);
        region2_0.setLayout(region2_0Layout);
        region2_0Layout.setHorizontalGroup(
            region2_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region2_0Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(region2_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region2_0Layout.createSequentialGroup()
                        .addComponent(cell7_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell7_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell7_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region2_0Layout.createSequentialGroup()
                        .addComponent(cell6_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell6_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell6_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region2_0Layout.createSequentialGroup()
                        .addComponent(cell8_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell8_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell8_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        region2_0Layout.setVerticalGroup(
            region2_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region2_0Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(region2_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell6_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell6_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell6_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region2_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell7_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell7_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell7_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region2_0Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell8_0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell8_1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell8_2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        region2_1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell6_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_3.setText(" ");
        cell6_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_3.setOpaque(true);
        cell6_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell6_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_4.setText(" ");
        cell6_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_4.setOpaque(true);
        cell6_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell6_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_5.setText(" ");
        cell6_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_5.setOpaque(true);
        cell6_5.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_3.setText(" ");
        cell7_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_3.setOpaque(true);
        cell7_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_4.setText(" ");
        cell7_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_4.setOpaque(true);
        cell7_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_5.setText(" ");
        cell7_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_5.setOpaque(true);
        cell7_5.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_3.setText(" ");
        cell8_3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_3.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_3.setOpaque(true);
        cell8_3.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_4.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_4.setText(" ");
        cell8_4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_4.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_4.setOpaque(true);
        cell8_4.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_5.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_5.setText(" ");
        cell8_5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_5.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_5.setOpaque(true);
        cell8_5.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region2_1Layout = new javax.swing.GroupLayout(region2_1);
        region2_1.setLayout(region2_1Layout);
        region2_1Layout.setHorizontalGroup(
            region2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region2_1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region2_1Layout.createSequentialGroup()
                        .addComponent(cell7_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell7_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell7_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region2_1Layout.createSequentialGroup()
                        .addComponent(cell6_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell6_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell6_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region2_1Layout.createSequentialGroup()
                        .addComponent(cell8_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell8_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell8_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        region2_1Layout.setVerticalGroup(
            region2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region2_1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell6_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell6_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell6_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell7_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell7_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell7_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region2_1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell8_3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell8_4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell8_5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        region2_2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        cell6_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_6.setText(" ");
        cell6_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_6.setOpaque(true);
        cell6_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell6_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_7.setText(" ");
        cell6_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_7.setOpaque(true);
        cell6_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell6_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell6_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell6_8.setText(" ");
        cell6_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell6_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell6_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell6_8.setOpaque(true);
        cell6_8.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_6.setText(" ");
        cell7_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_6.setOpaque(true);
        cell7_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_7.setText(" ");
        cell7_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_7.setOpaque(true);
        cell7_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell7_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell7_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell7_8.setText(" ");
        cell7_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell7_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell7_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell7_8.setOpaque(true);
        cell7_8.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_6.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_6.setText(" ");
        cell8_6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_6.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_6.setOpaque(true);
        cell8_6.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_7.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_7.setText(" ");
        cell8_7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_7.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_7.setOpaque(true);
        cell8_7.setPreferredSize(new java.awt.Dimension(50, 50));

        cell8_8.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        cell8_8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        cell8_8.setText(" ");
        cell8_8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cell8_8.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));
        cell8_8.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cell8_8.setOpaque(true);
        cell8_8.setPreferredSize(new java.awt.Dimension(50, 50));

        javax.swing.GroupLayout region2_2Layout = new javax.swing.GroupLayout(region2_2);
        region2_2.setLayout(region2_2Layout);
        region2_2Layout.setHorizontalGroup(
            region2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region2_2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(region2_2Layout.createSequentialGroup()
                        .addComponent(cell7_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell7_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell7_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region2_2Layout.createSequentialGroup()
                        .addComponent(cell6_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell6_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell6_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(region2_2Layout.createSequentialGroup()
                        .addComponent(cell8_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell8_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cell8_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        region2_2Layout.setVerticalGroup(
            region2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(region2_2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(region2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell6_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell6_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell6_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell7_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell7_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell7_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(region2_2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cell8_6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell8_7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cell8_8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout sodukuBoardLayout = new javax.swing.GroupLayout(sodukuBoard);
        sodukuBoard.setLayout(sodukuBoardLayout);
        sodukuBoardLayout.setHorizontalGroup(
            sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sodukuBoardLayout.createSequentialGroup()
                .addGroup(sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sodukuBoardLayout.createSequentialGroup()
                        .addComponent(region0_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(region0_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(region0_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sodukuBoardLayout.createSequentialGroup()
                        .addComponent(region1_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(region1_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(region1_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(sodukuBoardLayout.createSequentialGroup()
                        .addComponent(region2_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(region2_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(region2_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        sodukuBoardLayout.setVerticalGroup(
            sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sodukuBoardLayout.createSequentialGroup()
                .addGroup(sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(region0_0, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(region0_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(region0_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sodukuBoardLayout.createSequentialGroup()
                        .addGroup(sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(region1_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(region1_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sodukuBoardLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(region1_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(sodukuBoardLayout.createSequentialGroup()
                        .addGroup(sodukuBoardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(region2_0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(region2_1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sodukuBoardLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(region2_2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        restartButton.setText("Restart");
        restartButton.setToolTipText("Brings it back to the start");
        restartButton.setFocusable(false);
        restartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartButtonActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.setToolTipText("");
        startButton.setFocusable(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Clear");
        clearButton.setToolTipText("Clears the board");
        clearButton.setFocusable(false);
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        hintButton.setText("Hint");
        hintButton.setToolTipText("Gives one number");
        hintButton.setFocusable(false);
        hintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hintButtonActionPerformed(evt);
            }
        });

        checkButton.setText("Check");
        checkButton.setToolTipText("Checks sudoku board for any invalid inputs");
        checkButton.setFocusable(false);
        checkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkButtonActionPerformed(evt);
            }
        });

        boardSettings.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        boardSettings.setText("Board Settings");

        solveButton.setText("Solve");
        solveButton.setToolTipText("Solve board");
        solveButton.setFocusable(false);
        solveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveButtonActionPerformed(evt);
            }
        });

        solveSettings.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        solveSettings.setText("Solve Settings");

        musicPlayerJPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        musicComboBox.setFocusable(false);
        musicComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                musicComboBoxActionPerformed(evt);
            }
        });

        pauseAndPlayButton.setText("I I");
        pauseAndPlayButton.setFocusable(false);
        pauseAndPlayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseAndPlayButtonActionPerformed(evt);
            }
        });

        currentlyPlayingJLabel.setText("Currently Playing:");

        loopCheckBox.setText("Loop");
        loopCheckBox.setFocusable(false);
        loopCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loopCheckBoxActionPerformed(evt);
            }
        });

        jLabel1.setText("Music Player");

        javax.swing.GroupLayout musicPlayerJPanelLayout = new javax.swing.GroupLayout(musicPlayerJPanel);
        musicPlayerJPanel.setLayout(musicPlayerJPanelLayout);
        musicPlayerJPanelLayout.setHorizontalGroup(
            musicPlayerJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musicPlayerJPanelLayout.createSequentialGroup()
                .addGroup(musicPlayerJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(musicPlayerJPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(currentlyPlayingJLabel))
                    .addGroup(musicPlayerJPanelLayout.createSequentialGroup()
                        .addComponent(musicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(loopCheckBox)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pauseAndPlayButton)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, musicPlayerJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(185, 185, 185))
        );
        musicPlayerJPanelLayout.setVerticalGroup(
            musicPlayerJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(musicPlayerJPanelLayout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(musicPlayerJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(musicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loopCheckBox)
                    .addComponent(pauseAndPlayButton))
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(currentlyPlayingJLabel)
                .addGap(0, 0, 0))
        );

        boardSetText.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        boardSetText.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        boardSetText.setText("Game has not started");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 13)); // NOI18N
        jLabel3.setText("Puzzles");
        jLabel3.setToolTipText("");

        puzzlesComboBox.setToolTipText("");
        puzzlesComboBox.setFocusable(false);
        puzzlesComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                puzzlesComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(checkButton, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                        .addComponent(hintButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(solveButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(solveSettings)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(musicPlayerJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(boardSetText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sodukuBoard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(boardSettings)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(restartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(puzzlesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(boardSetText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(boardSettings)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(startButton)
                                .addGap(0, 0, 0)
                                .addComponent(restartButton)
                                .addGap(0, 0, 0)
                                .addComponent(clearButton)
                                .addGap(298, 298, 298)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(puzzlesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(sodukuBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(solveSettings)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkButton)
                        .addGap(0, 0, 0)
                        .addComponent(hintButton)
                        .addGap(0, 0, 0)
                        .addComponent(solveButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(musicPlayerJPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     * @param evt
     */
    private void restartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartButtonActionPerformed
        clearBoard();
        puzzlesComboBox.setEnabled(true);
    }//GEN-LAST:event_restartButtonActionPerformed

    /**
     *
     * @param evt
     */
    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (!cells[i][j].getText().equals(" ")) {
                    startButton.setText("Update");

                    userInput[i][j] = false;
                    cells[i][j].setFont(new Font("Lucida Grande", Font.BOLD, 36));
                } else {
                    userInput[i][j] = true;
                }

                if (!cells[i][j].getBackground().equals(new Color(238, 238, 238))) {
                    cellSelected = null;
                    cells[i][j].setBackground(new Color(238, 238, 238));
                }

            }
        }

        enableButtons(true);
        puzzlesComboBox.setEnabled(false);

        check.setup(getArray(cells), userInput);
        logic.setup(getArray(cells));

        boardSetText.setText("Game has started");
        boardSetText.setFont(new Font("Comic Sans MS", Font.BOLD, 13));
        boardSetText.setForeground(new Color(255, 0, 0));
    }//GEN-LAST:event_startButtonActionPerformed

    /**
     *
     * @param evt
     */
    private void hintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hintButtonActionPerformed
        logic.setup(getArray(cells));

        String[][] numbers = logic.solve();

        if (hasSolution(numbers, cells)) {
            JOptionPane.showMessageDialog(null, "No hints available");
            return;
        }

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (cells[i][j].getText().equals(" ") && !numbers[i][j].equals(" ")) {
                    numbers[i][j] = numbers[i][j].replace("[", "");
                    numbers[i][j] = numbers[i][j].replace("]", "");
                    cells[i][j].setText(numbers[i][j]);
                    return;
                }
            }
        }
    }//GEN-LAST:event_hintButtonActionPerformed

    /**
     *
     * @param evt
     */
    private void solveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveButtonActionPerformed

        check.setup(getArray(cells), userInput);
        boolean[][] wrongNum = check.checkBoard();

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (wrongNum[i][j] == false) {
                    JOptionPane.showMessageDialog(null, "Can not solve, board is incorrect");
                    return;
                }
            }
        }

        logic.setup(getArray(cells));

        String[][] numbers = logic.solve();
        int[][] num = new int[9][9];
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (numbers[i][j].equals(" ")) {
                    num[i][j] = -1;
                } else {
                    num[i][j] = Integer.parseInt(numbers[i][j]);
                }
            }
        }
        check.setup(num, userInput);
        boolean[][] placeholder = check.checkBoard();
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (placeholder[i][j] == false) {
                    JOptionPane.showMessageDialog(null, "Can not solve, incorrect inputs");
                    return;
                }
            }
        }

        //Can not find any solution
        if (hasSolution(numbers, cells)) {
            JOptionPane.showMessageDialog(null, "Can not solve, current implementation can only use method of elimination");
            return;
        }

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {

                cells[i][j].setText(numbers[i][j]);
            }
        }
    }//GEN-LAST:event_solveButtonActionPerformed

    /**
     *
     * @param evt
     */
    private void puzzlesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_puzzlesComboBoxActionPerformed

        if (puzzlesComboBox.getSelectedItem().toString().equals("None")) {
            clearBoard();
            return;
        }
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                cells[i][j].setText(" ");
                userInput[i][j] = true;
                cells[i][j].setFont(new Font("Lucida Grande", Font.PLAIN, 36));
                if (!cells[i][j].getBackground().equals(new Color(238, 238, 238))) {
                    cellSelected = null;
                    cells[i][j].setBackground(new Color(238, 238, 238));

                }
            }
        }

        enableButtons(false);

        boardSetText.setText("Game has not started");
        boardSetText.setFont(new Font("Comic Sans MS", Font.PLAIN, 13));
        boardSetText.setForeground(new Color(0, 0, 0));
        startButton.setText("Start");

        String[][] puzzle = new String[9][9];
        puzzle = readFiles.readPuzzle(puzzlesComboBox.getSelectedItem().toString());
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                cells[i][j].setText(puzzle[i][j]);
            }
        }
    }//GEN-LAST:event_puzzlesComboBoxActionPerformed

    /**
     *
     * @param evt
     */
    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {

                cells[i][j].setText(" ");
                userInput[i][j] = true;
                cells[i][j].setFont(new Font("Lucida Grande", Font.PLAIN, 36));
                if (!cells[i][j].getBackground().equals(new Color(238, 238, 238))) {
                    cellSelected = null;
                    cells[i][j].setBackground(new Color(238, 238, 238));

                }
            }
        }

        enableButtons(false);

        puzzlesComboBox.setEnabled(true);
        puzzlesComboBox.setSelectedIndex(0);

        startButton.setText("Start");

        boardSetText.setText("Game has not started");
        boardSetText.setFont(new Font("Comic Sans MS", Font.PLAIN, 13));
        boardSetText.setForeground(new Color(0, 0, 0));
    }//GEN-LAST:event_clearButtonActionPerformed

    private void pauseAndPlayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseAndPlayButtonActionPerformed
        if (pauseAndPlayButton.getText().equals("| |")) {
            pauseAndPlayButton.setText("Play");
            musicPlayer.pauseMusic();

        } else {
            musicPlayer.startMusic();
            pauseAndPlayButton.setText("| |");
        }
    }//GEN-LAST:event_pauseAndPlayButtonActionPerformed

    private void musicComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_musicComboBoxActionPerformed
        if (musicComboBox.getSelectedItem().toString().equals("None")) {
            musicPlayer.stopMusic();
            currentlyPlayingJLabel.setText("Currently playing:");
            return;
        }

        musicPlayer.stopMusic();

        musicPlayer.playMusic(musicComboBox.getSelectedItem().toString());
        currentlyPlayingJLabel.setText("Currently playing: " + musicComboBox.getSelectedItem().toString());
    }//GEN-LAST:event_musicComboBoxActionPerformed

    private void loopCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loopCheckBoxActionPerformed

        if (loopCheckBox.isSelected()) {
            musicPlayer.loopMusic();
        } else {
            musicPlayer.unLoopMusic();
        }

    }//GEN-LAST:event_loopCheckBoxActionPerformed

    private void checkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkButtonActionPerformed
        check.setup(getArray(cells), userInput);
        boolean[][] wrongNum = check.checkBoard();

        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (!wrongNum[i][j]) {
                    cells[i][j].setBackground(Color.red);
                } else {
                    cells[i][j].setBackground(new Color(238, 238, 238));
                }
            }
        }
    }//GEN-LAST:event_checkButtonActionPerformed

    /**
     *
     * @param evt
     * @param cell
     */
    private void cellMouseWheelMoved(java.awt.event.MouseWheelEvent evt, int i, int j) {
        if (userInput[i][j]) {
            mouseWheelSquare(cells[i][j], evt);
        }
    }

    /**
     *
     * @param cell
     * @param event
     */
    private static void mouseWheelSquare(JLabel cell, java.awt.event.MouseWheelEvent event) {
        Color cellSelectedColor = new Color(51, 255, 51);

        if (cell.getBackground().equals(cellSelectedColor)) {
            String text = cell.getText();

            //Scroll up
            if (event.getWheelRotation() >= 0) {
                if (text.equals(" ")) {
                    cell.setText("9");
                } else if (text.equals("1")) {
                    cell.setText(" ");
                } else {
                    cell.setText(Integer.toString(Integer.parseInt(text) - 1));
                }
            }

            //Scroll down
            if (event.getScrollType() <= 0) {
                if (text.equals(" ")) {
                    cell.setText("1");
                } else if (text.equals("9")) {
                    cell.setText(" ");
                } else {
                    cell.setText(Integer.toString(Integer.parseInt(text) + 1));
                }
            }

        }
    }

    /**
     *
     * @param evt
     * @param cell
     */
    private void cellMouseClicked(java.awt.event.MouseEvent evt, int i, int j) {
        if (userInput[i][j]) {
            clickSquare(cells[i][j], evt);
        }
    }

    /**
     *
     * @param cell
     * @param event
     */
    private static void clickSquare(JLabel cell, java.awt.event.MouseEvent event) {
        Color cellSelectedColor = new Color(51, 255, 51);

        if (cell.getBackground().equals(cellSelectedColor)) {
            String text = cell.getText();

            //Right Click
            if (SwingUtilities.isRightMouseButton(event)) {
                if (text.equals(" ")) {
                    cell.setText("9");
                } else if (text.equals("1")) {
                    cell.setText(" ");
                } else {
                    cell.setText(Integer.toString(Integer.parseInt(text) - 1));
                }
            }

            //Left Click
            if (SwingUtilities.isLeftMouseButton(event)) {
                if (text.equals(" ")) {
                    cell.setText("1");
                } else if (text.equals("9")) {
                    cell.setText(" ");
                } else {
                    cell.setText(Integer.toString(Integer.parseInt(text) + 1));
                }
            }

        } else {
            if (cellSelected != null) {
                cellSelected.setBackground(new Color(238, 238, 238));
                cellSelected = cell;
                cell.setBackground(cellSelectedColor);
            } else {
                cellSelected = cell;
                cell.setBackground(cellSelectedColor);
            }
        }
    }

    /**
     * Reads the sodukuGrid
     *
     * @param cells
     * @return all numbers in the sodukuGrid
     */
    private static int[][] getArray(JLabel[][] cells) {
        int[][] array = new int[9][9];
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (cells[i][j].getText().equals(" ") || cells[i][j].getText().equals("")) {
                    array[i][j] = -1;
                } else {
                    array[i][j] = Integer.parseInt(cells[i][j].getText());
                }
            }
        }
        return array;
    }

    /**
     * Clears the board
     */
    private void clearBoard() {
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 9; j++) {
                if (userInput[i][j]) {
                    cells[i][j].setText(" ");
                }

                if (cells[i][j].getBackground() != new Color(238, 238, 238)) {
                    cellSelected = null;
                    cells[i][j].setBackground(new Color(238, 238, 238));

                }
            }
        }
    }

    /**
     * Enables or disables buttons
     *
     * @param a
     */
    private void enableButtons(boolean a) {
        restartButton.setEnabled(a);
        checkButton.setEnabled(a);
        solveButton.setEnabled(a);
        hintButton.setEnabled(a);
        restartButton.setEnabled(a);
    }

    /**
     * Checks if there is a solution or not
     *
     * @param array
     * @return Boolean depending if it is empty or not
     */
    private static boolean hasSolution(String[][] array, JLabel[][] cells) {
        for (int i = 0; i < array.length; i++) {
            for (int j = 0; j < array[0].length; j++) {
                if (cells[i][j].getText().equals(" ") && !array[i][j].equals(" ")) {
                    return false;
                }
            }

        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel boardSetText;
    private javax.swing.JLabel boardSettings;
    private javax.swing.JLabel cell0_0;
    private javax.swing.JLabel cell0_1;
    private javax.swing.JLabel cell0_2;
    private javax.swing.JLabel cell0_3;
    private javax.swing.JLabel cell0_4;
    private javax.swing.JLabel cell0_5;
    private javax.swing.JLabel cell0_6;
    private javax.swing.JLabel cell0_7;
    private javax.swing.JLabel cell0_8;
    private javax.swing.JLabel cell1_0;
    private javax.swing.JLabel cell1_1;
    private javax.swing.JLabel cell1_2;
    private javax.swing.JLabel cell1_3;
    private javax.swing.JLabel cell1_4;
    private javax.swing.JLabel cell1_5;
    private javax.swing.JLabel cell1_6;
    private javax.swing.JLabel cell1_7;
    private javax.swing.JLabel cell1_8;
    private javax.swing.JLabel cell2_0;
    private javax.swing.JLabel cell2_1;
    private javax.swing.JLabel cell2_2;
    private javax.swing.JLabel cell2_3;
    private javax.swing.JLabel cell2_4;
    private javax.swing.JLabel cell2_5;
    private javax.swing.JLabel cell2_6;
    private javax.swing.JLabel cell2_7;
    private javax.swing.JLabel cell2_8;
    private javax.swing.JLabel cell3_0;
    private javax.swing.JLabel cell3_1;
    private javax.swing.JLabel cell3_2;
    private javax.swing.JLabel cell3_3;
    private javax.swing.JLabel cell3_4;
    private javax.swing.JLabel cell3_5;
    private javax.swing.JLabel cell3_6;
    private javax.swing.JLabel cell3_7;
    private javax.swing.JLabel cell3_8;
    private javax.swing.JLabel cell4_0;
    private javax.swing.JLabel cell4_1;
    private javax.swing.JLabel cell4_2;
    private javax.swing.JLabel cell4_3;
    private javax.swing.JLabel cell4_4;
    private javax.swing.JLabel cell4_5;
    private javax.swing.JLabel cell4_6;
    private javax.swing.JLabel cell4_7;
    private javax.swing.JLabel cell4_8;
    private javax.swing.JLabel cell5_0;
    private javax.swing.JLabel cell5_1;
    private javax.swing.JLabel cell5_2;
    private javax.swing.JLabel cell5_3;
    private javax.swing.JLabel cell5_4;
    private javax.swing.JLabel cell5_5;
    private javax.swing.JLabel cell5_6;
    private javax.swing.JLabel cell5_7;
    private javax.swing.JLabel cell5_8;
    private javax.swing.JLabel cell6_0;
    private javax.swing.JLabel cell6_1;
    private javax.swing.JLabel cell6_2;
    private javax.swing.JLabel cell6_3;
    private javax.swing.JLabel cell6_4;
    private javax.swing.JLabel cell6_5;
    private javax.swing.JLabel cell6_6;
    private javax.swing.JLabel cell6_7;
    private javax.swing.JLabel cell6_8;
    private javax.swing.JLabel cell7_0;
    private javax.swing.JLabel cell7_1;
    private javax.swing.JLabel cell7_2;
    private javax.swing.JLabel cell7_3;
    private javax.swing.JLabel cell7_4;
    private javax.swing.JLabel cell7_5;
    private javax.swing.JLabel cell7_6;
    private javax.swing.JLabel cell7_7;
    private javax.swing.JLabel cell7_8;
    private javax.swing.JLabel cell8_0;
    private javax.swing.JLabel cell8_1;
    private javax.swing.JLabel cell8_2;
    private javax.swing.JLabel cell8_3;
    private javax.swing.JLabel cell8_4;
    private javax.swing.JLabel cell8_5;
    private javax.swing.JLabel cell8_6;
    private javax.swing.JLabel cell8_7;
    private javax.swing.JLabel cell8_8;
    private javax.swing.JButton checkButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel currentlyPlayingJLabel;
    private javax.swing.JButton hintButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox loopCheckBox;
    private javax.swing.JComboBox<String> musicComboBox;
    private javax.swing.JPanel musicPlayerJPanel;
    private javax.swing.JButton pauseAndPlayButton;
    private javax.swing.JComboBox<String> puzzlesComboBox;
    private javax.swing.JPanel region0_0;
    private javax.swing.JPanel region0_1;
    private javax.swing.JPanel region0_2;
    private javax.swing.JPanel region1_0;
    private javax.swing.JPanel region1_1;
    private javax.swing.JPanel region1_2;
    private javax.swing.JPanel region2_0;
    private javax.swing.JPanel region2_1;
    private javax.swing.JPanel region2_2;
    private javax.swing.JButton restartButton;
    private javax.swing.JPanel sodukuBoard;
    private javax.swing.JButton solveButton;
    private javax.swing.JLabel solveSettings;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
